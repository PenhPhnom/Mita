//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;



namespace cfg
{ 
	public partial class Tables
	{
		public Config.TbTest TbTest {get; }
		public Config.TbGuideConfig TbGuideConfig {get; }
		public Config.TbGuideDetailConfig TbGuideDetailConfig {get; }
		public Config.TbGuideShowConfig TbGuideShowConfig {get; }
		public Config.TbTranslateConfig TbTranslateConfig {get; }
		public Config.TbSanXiaoConfig TbSanXiaoConfig {get; }

		public Tables(System.Func<string, ByteBuf> loader)
		{
			var tables = new System.Collections.Generic.Dictionary<string, object>();
			var tableNames = new System.Collections.Generic.Dictionary<string, string>();
			var tableBytes = new System.Collections.Generic.Dictionary<string, ByteBuf>();
			tableNames.Add("config_tbtest", "Config.TbTest");
			tableNames.Add("config_tbguideconfig", "Config.TbGuideConfig");
			tableNames.Add("config_tbguidedetailconfig", "Config.TbGuideDetailConfig");
			tableNames.Add("config_tbguideshowconfig", "Config.TbGuideShowConfig");
			tableNames.Add("config_tbtranslateconfig", "Config.TbTranslateConfig");
			tableNames.Add("config_tbsanxiaoconfig", "Config.TbSanXiaoConfig");

			PostInit();
			foreach (var tableName in tableNames)
            {
				var loaderData = loader(tableName.Key);
				if(loaderData != null)
                {
					switch (tableName.Key)
					{
						case "config_tbtest":
							TbTest = new Config.TbTest(loaderData);
							tables.Add(tableName.Value, TbTest);
							TbTest.Resolve(tables);
							break;
						case "config_tbguideconfig":
							TbGuideConfig = new Config.TbGuideConfig(loaderData);
							tables.Add(tableName.Value, TbGuideConfig);
							TbGuideConfig.Resolve(tables);
							break;
						case "config_tbguidedetailconfig":
							TbGuideDetailConfig = new Config.TbGuideDetailConfig(loaderData);
							tables.Add(tableName.Value, TbGuideDetailConfig);
							TbGuideDetailConfig.Resolve(tables);
							break;
						case "config_tbguideshowconfig":
							TbGuideShowConfig = new Config.TbGuideShowConfig(loaderData);
							tables.Add(tableName.Value, TbGuideShowConfig);
							TbGuideShowConfig.Resolve(tables);
							break;
						case "config_tbtranslateconfig":
							TbTranslateConfig = new Config.TbTranslateConfig(loaderData);
							tables.Add(tableName.Value, TbTranslateConfig);
							TbTranslateConfig.Resolve(tables);
							break;
						case "config_tbsanxiaoconfig":
							TbSanXiaoConfig = new Config.TbSanXiaoConfig(loaderData);
							tables.Add(tableName.Value, TbSanXiaoConfig);
							TbSanXiaoConfig.Resolve(tables);
							break;
					}
				}
            }
            PostResolve();
		}

		public void TranslateText(System.Func<string, string, string> translator)
		{
			TbTest.TranslateText(translator); 
			TbGuideConfig.TranslateText(translator); 
			TbGuideDetailConfig.TranslateText(translator); 
			TbGuideShowConfig.TranslateText(translator); 
			TbTranslateConfig.TranslateText(translator); 
			TbSanXiaoConfig.TranslateText(translator); 
		}
		
		partial void PostInit();
		partial void PostResolve();
	}

}